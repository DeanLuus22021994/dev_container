name: CI/CD Workflow

on:
  push:
    branches: [main, master, develop]
    paths-ignore:
      - '**.md'
  pull_request:
    branches: [main, master]
    paths-ignore:
      - '**.md'
  workflow_dispatch:

jobs:
  build-test:
    runs-on: ubuntu-latest
    env:
      DOCKER_HOST: ${{ secrets.DOCKER_HOST }}
      DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      OWNER: ${{ secrets.OWNER }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run linting
        run: npm run lint
        
      - name: Format code check
        run: npx prettier --check .
        
      - name: Run tests with coverage
        run: npm test
        
      - name: Build
        run: npm run compile
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-output
          path: ./out
          if-no-files-found: error
          
      - name: Generate documentation
        run: |
          npm install -g docsify-cli
          docsify generate ./docs

  deploy:
    needs: build-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    env:
      DOCKER_HOST: ${{ secrets.DOCKER_HOST }}
      DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      OWNER: ${{ secrets.OWNER }}
      
    steps:
      - uses: actions/checkout@v4
      
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-output
          path: ./out
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to Docker Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
          registry: ${{ secrets.DOCKER_REGISTRY }}
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/cicd-automation:latest
          build-args: |
            SSH_DEV_CONTAINER_REPO=${{ secrets.SSH_DEV_CONTAINER_REPO }}
            PERSONAL_ACCESS_TOKEN=${{ secrets.PERSONAL_ACCESS_TOKEN }}

  vscode-integration:
    needs: deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Create/Update devcontainer configuration
        run: |
          mkdir -p .devcontainer
          cat > .devcontainer/devcontainer.json << EOL
          {
            "name": "Dev Container",
            "image": "${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/cicd-automation:latest",
            "extensions": [
              "dbaeumer.vscode-eslint",
              "esbenp.prettier-vscode",
              "ms-vscode.vscode-typescript-next",
              "github.vscode-github-actions",
              "ms-azuretools.vscode-docker",
              "ms-vscode-remote.remote-containers"
            ],
            "settings": {
              "editor.formatOnSave": true,
              "editor.defaultFormatter": "esbenp.prettier-vscode",
              "editor.codeActionsOnSave": {
                "source.fixAll.eslint": true
              },
              "eslint.validate": ["javascript", "typescript"],
              "terminal.integrated.defaultProfile.linux": "bash"
            },
            "remoteUser": "vscode",
            "containerEnv": {
              "OLLAMA_HOST": "http://localhost:11434"
            },
            "features": {
              "ghcr.io/devcontainers/features/node:1": {},
              "ghcr.io/devcontainers/features/docker-in-docker:2": {}
            },
            "forwardPorts": [3000, 11434],
            "postCreateCommand": "npm install"
          }
          EOL
          
          mkdir -p .vscode
          cat > .vscode/settings.json << EOL
          {
            "editor.formatOnSave": true,
            "editor.defaultFormatter": "esbenp.prettier-vscode",
            "editor.codeActionsOnSave": {
              "source.fixAll.eslint": true
            },
            "eslint.validate": ["javascript", "typescript"],
            "terminal.integrated.defaultProfile.linux": "bash"
          }
          EOL
          
      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v6
        with:
          commit_message: "Update dev container configuration for VSCode Insiders integration"
          file_pattern: .devcontainer/devcontainer.json .vscode/settings.json